/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Mon Dec 17 13:37:12 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_CONTROLLER_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_CONTROLLER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Controller {
    double temp;
    double humi;
    double voltage;
    bool emc;
    bool brake;
    bool driverEmc;
    bool manualCharge;
    bool autoCharge;
    bool electric;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Controller) */
} rbk_protocol_Message_Controller;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_Controller_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_Controller_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Controller_temp_tag 1
#define rbk_protocol_Message_Controller_humi_tag 2
#define rbk_protocol_Message_Controller_voltage_tag 3
#define rbk_protocol_Message_Controller_emc_tag  4
#define rbk_protocol_Message_Controller_brake_tag 5
#define rbk_protocol_Message_Controller_driverEmc_tag 6
#define rbk_protocol_Message_Controller_manualCharge_tag 7
#define rbk_protocol_Message_Controller_autoCharge_tag 8
#define rbk_protocol_Message_Controller_electric_tag 9

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_Controller_fields[10];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_Controller_size     39

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_CONTROLLER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
