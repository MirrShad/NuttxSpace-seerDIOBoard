/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Wed Sep 13 19:07:53 2017. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_ENCODER_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_ENCODER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Encoder {
    uint32_t encID;
    int32_t value;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Encoder) */
} rbk_protocol_Message_Encoder;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_Encoder_init_default {0, 0}
#define rbk_protocol_Message_Encoder_init_zero   {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Encoder_encID_tag   1
#define rbk_protocol_Message_Encoder_value_tag   2

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_Encoder_fields[3];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_Encoder_size        17

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_ENCODER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
