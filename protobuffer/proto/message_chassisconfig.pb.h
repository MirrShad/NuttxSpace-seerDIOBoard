/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Wed May 30 16:49:24 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_CHASSISCONFIG_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_CHASSISCONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_ChassisConfig {
    float E;
    pb_size_t R_count;
    float R[4];
    pb_size_t driveID_count;
    float driveID[4];
    int32_t encoderLines;
    float reductionRatio;
    int32_t motorMaxSpeedRpm;
    int32_t Inverse;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_ChassisConfig) */
} rbk_protocol_Message_ChassisConfig;

typedef struct _rbk_protocol_Message_ChassisDemandConfig {
    int32_t bChassisExist;
    int32_t bBatteryExist;
    int32_t bGyroExist;
    int32_t bSubsystemExist;
    int32_t bSonicExist;
    int32_t bRFIDExist;
    int32_t bMagneticSenserExist;
    int32_t bIntBrdExist;
    int32_t chassisType;
    int32_t driverBrand;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_ChassisDemandConfig) */
} rbk_protocol_Message_ChassisDemandConfig;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_ChassisConfig_init_default {0, 0, {0, 0, 0, 0}, 0, {0, 0, 0, 0}, 0, 0, 0, 0}
#define rbk_protocol_Message_ChassisDemandConfig_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_ChassisConfig_init_zero {0, 0, {0, 0, 0, 0}, 0, {0, 0, 0, 0}, 0, 0, 0, 0}
#define rbk_protocol_Message_ChassisDemandConfig_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_ChassisConfig_E_tag 1
#define rbk_protocol_Message_ChassisConfig_R_tag 2
#define rbk_protocol_Message_ChassisConfig_driveID_tag 3
#define rbk_protocol_Message_ChassisConfig_encoderLines_tag 4
#define rbk_protocol_Message_ChassisConfig_reductionRatio_tag 5
#define rbk_protocol_Message_ChassisConfig_motorMaxSpeedRpm_tag 6
#define rbk_protocol_Message_ChassisConfig_Inverse_tag 7
#define rbk_protocol_Message_ChassisDemandConfig_bChassisExist_tag 1
#define rbk_protocol_Message_ChassisDemandConfig_bBatteryExist_tag 2
#define rbk_protocol_Message_ChassisDemandConfig_bGyroExist_tag 3
#define rbk_protocol_Message_ChassisDemandConfig_bSubsystemExist_tag 4
#define rbk_protocol_Message_ChassisDemandConfig_bSonicExist_tag 5
#define rbk_protocol_Message_ChassisDemandConfig_bRFIDExist_tag 6
#define rbk_protocol_Message_ChassisDemandConfig_bMagneticSenserExist_tag 7
#define rbk_protocol_Message_ChassisDemandConfig_bIntBrdExist_tag 8
#define rbk_protocol_Message_ChassisDemandConfig_chassisType_tag 9
#define rbk_protocol_Message_ChassisDemandConfig_driverBrand_tag 10

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_ChassisConfig_fields[8];
extern const pb_field_t rbk_protocol_Message_ChassisDemandConfig_fields[11];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_ChassisConfig_size  83
#define rbk_protocol_Message_ChassisDemandConfig_size 110

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_CHASSISCONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
