/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Tue Jun 13 20:31:18 2017. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_HEADER_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_HEADER_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Header {
    uint64_t pub_nsec;
    uint64_t data_nsec;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Header) */
} rbk_protocol_Message_Header;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_Header_init_default {0, 0}
#define rbk_protocol_Message_Header_init_zero    {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Header_pub_nsec_tag 1
#define rbk_protocol_Message_Header_data_nsec_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_Header_fields[3];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_Header_size         22

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_HEADER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
