/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Tue Dec 18 20:59:43 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_FORK_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_FORK_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Fork {
    double height;
    double incline;
    double fork_val;
    double incline_val;
    int32_t fork_error;
    bool height_in_place;
    bool incline_in_place;
    bool get_goods;
    bool auto_flag;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Fork) */
} rbk_protocol_Message_Fork;

typedef struct _rbk_protocol_Message_Fork_Downward {
    int32_t type;
    int32_t pump;
    int32_t encodeline;
    int32_t pressureSensor;
    float minHeight;
    float maxHeight;
    int32_t CAN_ID;
    float max_angle;
    float min_angle;
    float driverPeriod;
    float upBuffer;
    float downBuffer;
    float leftSteerRange;
    float rightSteerRange;
    float steeroffset;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Fork_Downward) */
} rbk_protocol_Message_Fork_Downward;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_Fork_init_default   {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_Fork_Downward_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_Fork_init_zero      {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_Fork_Downward_init_zero {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Fork_height_tag     1
#define rbk_protocol_Message_Fork_incline_tag    2
#define rbk_protocol_Message_Fork_fork_val_tag   3
#define rbk_protocol_Message_Fork_incline_val_tag 4
#define rbk_protocol_Message_Fork_fork_error_tag 5
#define rbk_protocol_Message_Fork_height_in_place_tag 6
#define rbk_protocol_Message_Fork_incline_in_place_tag 7
#define rbk_protocol_Message_Fork_get_goods_tag  8
#define rbk_protocol_Message_Fork_auto_flag_tag  9
#define rbk_protocol_Message_Fork_Downward_type_tag 1
#define rbk_protocol_Message_Fork_Downward_pump_tag 2
#define rbk_protocol_Message_Fork_Downward_encodeline_tag 3
#define rbk_protocol_Message_Fork_Downward_pressureSensor_tag 4
#define rbk_protocol_Message_Fork_Downward_minHeight_tag 5
#define rbk_protocol_Message_Fork_Downward_maxHeight_tag 6
#define rbk_protocol_Message_Fork_Downward_CAN_ID_tag 7
#define rbk_protocol_Message_Fork_Downward_max_angle_tag 8
#define rbk_protocol_Message_Fork_Downward_min_angle_tag 9
#define rbk_protocol_Message_Fork_Downward_driverPeriod_tag 10
#define rbk_protocol_Message_Fork_Downward_upBuffer_tag 11
#define rbk_protocol_Message_Fork_Downward_downBuffer_tag 12
#define rbk_protocol_Message_Fork_Downward_leftSteerRange_tag 13
#define rbk_protocol_Message_Fork_Downward_rightSteerRange_tag 14
#define rbk_protocol_Message_Fork_Downward_steeroffset_tag 15

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_Fork_fields[10];
extern const pb_field_t rbk_protocol_Message_Fork_Downward_fields[16];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_Fork_size           55
#define rbk_protocol_Message_Fork_Downward_size  105

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_FORK_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
