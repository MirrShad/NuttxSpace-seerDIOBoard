/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Fri Aug 10 16:50:58 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_IO_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_IO_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Astern {
    uint32_t status;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Astern) */
} rbk_protocol_Message_Astern;

typedef struct _rbk_protocol_Message_DI {
    uint32_t num;
    pb_size_t id_count;
    bool id[16];
    pb_callback_t forbidden;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_DI) */
} rbk_protocol_Message_DI;

typedef struct _rbk_protocol_Message_DO {
    uint32_t num;
    pb_size_t id_count;
    bool id[16];
/* @@protoc_insertion_point(struct:rbk_protocol_Message_DO) */
} rbk_protocol_Message_DO;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_DI_init_default     {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {{NULL}, NULL}}
#define rbk_protocol_Message_DO_init_default     {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define rbk_protocol_Message_Astern_init_default {0}
#define rbk_protocol_Message_DI_init_zero        {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {{NULL}, NULL}}
#define rbk_protocol_Message_DO_init_zero        {0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define rbk_protocol_Message_Astern_init_zero    {0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Astern_status_tag   1
#define rbk_protocol_Message_DI_num_tag          1
#define rbk_protocol_Message_DI_id_tag           2
#define rbk_protocol_Message_DI_forbidden_tag    3
#define rbk_protocol_Message_DO_num_tag          1
#define rbk_protocol_Message_DO_id_tag           2

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_DI_fields[4];
extern const pb_field_t rbk_protocol_Message_DO_fields[3];
extern const pb_field_t rbk_protocol_Message_Astern_fields[2];

/* Maximum encoded size of messages (where known) */
/* rbk_protocol_Message_DI_size depends on runtime parameters */
#define rbk_protocol_Message_DO_size             38
#define rbk_protocol_Message_Astern_size         6

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_IO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
