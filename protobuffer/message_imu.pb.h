/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Mon Jan 29 20:24:45 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_IMU_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_IMU_PB_H_INCLUDED
#include <pb.h>

#include "message_header.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_IMU {
    rbk_protocol_Message_Header header;
    double yaw;
    double roll;
    double pitch;
    double acc_x;
    double acc_y;
    double acc_z;
    double rot_x;
    double rot_y;
    double rot_z;
    int32_t rot_off_x;
    int32_t rot_off_y;
    int32_t rot_off_z;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_IMU) */
} rbk_protocol_Message_IMU;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_IMU_init_default    {rbk_protocol_Message_Header_init_default, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_IMU_init_zero       {rbk_protocol_Message_Header_init_zero, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_IMU_header_tag      1
#define rbk_protocol_Message_IMU_yaw_tag         2
#define rbk_protocol_Message_IMU_roll_tag        3
#define rbk_protocol_Message_IMU_pitch_tag       4
#define rbk_protocol_Message_IMU_acc_x_tag       5
#define rbk_protocol_Message_IMU_acc_y_tag       6
#define rbk_protocol_Message_IMU_acc_z_tag       7
#define rbk_protocol_Message_IMU_rot_x_tag       8
#define rbk_protocol_Message_IMU_rot_y_tag       9
#define rbk_protocol_Message_IMU_rot_z_tag       10
#define rbk_protocol_Message_IMU_rot_off_x_tag   11
#define rbk_protocol_Message_IMU_rot_off_y_tag   12
#define rbk_protocol_Message_IMU_rot_off_z_tag   13

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_IMU_fields[14];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_IMU_size            138

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_IMU_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
