/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Fri Aug 31 19:34:14 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_BATTERY_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_BATTERY_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Battery {
    double percetage;
    double charge_current;
    double charge_voltage;
    bool is_charging;
    double temperature;
    int32_t cycle;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Battery) */
} rbk_protocol_Message_Battery;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_Battery_init_default {0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_Battery_init_zero   {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Battery_percetage_tag 1
#define rbk_protocol_Message_Battery_charge_current_tag 2
#define rbk_protocol_Message_Battery_charge_voltage_tag 3
#define rbk_protocol_Message_Battery_is_charging_tag 4
#define rbk_protocol_Message_Battery_temperature_tag 5
#define rbk_protocol_Message_Battery_cycle_tag   6

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_Battery_fields[7];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_Battery_size        49

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_BATTERY_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
