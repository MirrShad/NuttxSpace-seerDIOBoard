/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Fri Nov 30 14:31:39 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_JACK_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_JACK_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Jack {
    int32_t mode;
    int32_t state;
    bool enable;
    int32_t errorCode;
    bool isFull;
    int32_t speed_level;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Jack) */
} rbk_protocol_Message_Jack;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_Jack_init_default   {0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_Jack_init_zero      {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Jack_mode_tag       1
#define rbk_protocol_Message_Jack_state_tag      2
#define rbk_protocol_Message_Jack_enable_tag     3
#define rbk_protocol_Message_Jack_errorCode_tag  4
#define rbk_protocol_Message_Jack_isFull_tag     5
#define rbk_protocol_Message_Jack_speed_level_tag 6

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_Jack_fields[7];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_Jack_size           48

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_JACK_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
