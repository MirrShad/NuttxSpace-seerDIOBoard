/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Thu Jan 03 17:45:26 2019. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_ODOMETER_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_ODOMETER_PB_H_INCLUDED
#include <pb.h>

#include "message_header.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_Odometer {
    rbk_protocol_Message_Header header;
    uint32_t cycle;
    double x;
    double y;
    double angle;
    bool is_stop;
    double vel_x;
    double vel_y;
    double vel_rotate;
    pb_size_t encoder_count;
    int32_t encoder[4];
    double steer_angle;
    double spin_angle;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_Odometer) */
} rbk_protocol_Message_Odometer;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_Odometer_init_default {rbk_protocol_Message_Header_init_default, 0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0}, 0, 0}
#define rbk_protocol_Message_Odometer_init_zero  {rbk_protocol_Message_Header_init_zero, 0, 0, 0, 0, 0, 0, 0, 0, 0, {0, 0, 0, 0}, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_Odometer_header_tag 1
#define rbk_protocol_Message_Odometer_cycle_tag  2
#define rbk_protocol_Message_Odometer_x_tag      3
#define rbk_protocol_Message_Odometer_y_tag      4
#define rbk_protocol_Message_Odometer_angle_tag  5
#define rbk_protocol_Message_Odometer_is_stop_tag 6
#define rbk_protocol_Message_Odometer_vel_x_tag  7
#define rbk_protocol_Message_Odometer_vel_y_tag  8
#define rbk_protocol_Message_Odometer_vel_rotate_tag 9
#define rbk_protocol_Message_Odometer_encoder_tag 10
#define rbk_protocol_Message_Odometer_steer_angle_tag 11
#define rbk_protocol_Message_Odometer_spin_angle_tag 12

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_Odometer_fields[13];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_Odometer_size       148

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_ODOMETER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
