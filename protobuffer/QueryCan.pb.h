/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Fri Jun 09 10:40:18 2017. */

#ifndef PB_QUERYCAN_PB_H_INCLUDED
#define PB_QUERYCAN_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _QUERY_TYPE {
    QUERY_TYPE_FRAME = 0
} QUERY_TYPE;
#define _QUERY_TYPE_MIN QUERY_TYPE_FRAME
#define _QUERY_TYPE_MAX QUERY_TYPE_FRAME
#define _QUERY_TYPE_ARRAYSIZE ((QUERY_TYPE)(QUERY_TYPE_FRAME+1))

/* Struct definitions */
typedef struct _QueryCan {
    uint32_t type;
    uint32_t num;
/* @@protoc_insertion_point(struct:QueryCan) */
} QueryCan;

/* Default values for struct fields */

/* Initializer values for message structs */
#define QueryCan_init_default                    {0, 0}
#define QueryCan_init_zero                       {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define QueryCan_type_tag                        1
#define QueryCan_num_tag                         2

/* Struct field encoding specification for nanopb */
extern const pb_field_t QueryCan_fields[3];

/* Maximum encoded size of messages (where known) */
#define QueryCan_size                            12

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define QUERYCAN_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
