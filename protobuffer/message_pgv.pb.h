/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sun Mar 04 15:03:26 2018. */

#ifndef PB_RBK_PROTOCOL_MESSAGE_PGV_PB_H_INCLUDED
#define PB_RBK_PROTOCOL_MESSAGE_PGV_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _rbk_protocol_Message_PGV_DMT {
    int32_t tag_diff_x;
    int32_t tag_diff_y;
    uint32_t tag_diff_angle;
    uint32_t tag_value;
    uint32_t warning_code;
    uint32_t device_address;
    bool is_DMT_detected;
    bool is_error;
    bool is_absolute_X_pos_valid;
/* @@protoc_insertion_point(struct:rbk_protocol_Message_PGV_DMT) */
} rbk_protocol_Message_PGV_DMT;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rbk_protocol_Message_PGV_DMT_init_default {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define rbk_protocol_Message_PGV_DMT_init_zero   {0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define rbk_protocol_Message_PGV_DMT_tag_diff_x_tag 1
#define rbk_protocol_Message_PGV_DMT_tag_diff_y_tag 2
#define rbk_protocol_Message_PGV_DMT_tag_diff_angle_tag 3
#define rbk_protocol_Message_PGV_DMT_tag_value_tag 4
#define rbk_protocol_Message_PGV_DMT_warning_code_tag 5
#define rbk_protocol_Message_PGV_DMT_device_address_tag 6
#define rbk_protocol_Message_PGV_DMT_is_DMT_detected_tag 7
#define rbk_protocol_Message_PGV_DMT_is_error_tag 8
#define rbk_protocol_Message_PGV_DMT_is_absolute_X_pos_valid_tag 9

/* Struct field encoding specification for nanopb */
extern const pb_field_t rbk_protocol_Message_PGV_DMT_fields[10];

/* Maximum encoded size of messages (where known) */
#define rbk_protocol_Message_PGV_DMT_size        52

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_PGV_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
